doctype html(lang='en')
head
    meta(charset='utf-8')
    title PHT Arduinos Sensors
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    meta(name='description', content='')
    meta(name='author', content='')
    // link rel="stylesheet/less" href="less/bootstrap.less" type="text/css" /
    // link rel="stylesheet/less" href="less/responsive.less" type="text/css" /
    // script src="javascripts/less-1.3.3.min.js"></script
    // append ‘#!watch’ to the browser URL, then refresh the page.
    link(href='stylesheets/bootstrap.min.css', rel='stylesheet')
    link(href='stylesheets/style.css', rel='stylesheet')
    // HTML5 shim, for IE6-8 support of HTML5 elements
    //if lt IE 9
      script(src='javascripts/html5shiv.js')
    // Fav and touch icons
    link(rel='apple-touch-icon-precomposed', sizes='144x144', href='img/apple-touch-icon-144-precomposed.png')
    link(rel='apple-touch-icon-precomposed', sizes='114x114', href='img/apple-touch-icon-114-precomposed.png')
    link(rel='apple-touch-icon-precomposed', sizes='72x72', href='img/apple-touch-icon-72-precomposed.png')
    link(rel='apple-touch-icon-precomposed', href='img/apple-touch-icon-57-precomposed.png')
    link(rel='shortcut icon', href='img/favicon.png')

    script(type='text/javascript', src='/socket.io/socket.io.js')
    script(type='text/javascript', src='javascripts/jquery.min.js')
    script(type='text/javascript', src='javascripts/bootstrap.min.js')
    script(type='text/javascript', src='javascripts/scripts.js')
    script(type='text/javascript', src='javascripts/jquery.flot.min.js')

    script(type='text/javascript').
      var arduinoPort, arduinoVersion;
      function toggle(button)      {
       if(document.getElementById("buttonToggle").value=="OFF"){
        socket.emit('button update event', { status: 'OFF' });
       }
       else if(document.getElementById("buttonToggle").value=="ON"){
        socket.emit('button update event', { status: 'ON' });
       }
      }
      $(function() {
        //$('.saveFileCheckbox').prop('checked', true);
        $('#saveFileCheckbox').change(function () {
          if($('#saveFileCheckbox').is(':checked')){
            //console.log('save file true');
            socket.emit('saveFile', { saveFile: 'true' });
          }else{
            //console.log('save file false');
            socket.emit('saveFile', { saveFile: 'false' });
          }
        });
        var socket = io();
        var an0, an1, an2,an3, an4, an5;
        var d0=[], d1=[], d2=[], d3=[], d4=[], d5=[];
        var totalPoints = 10;
        var i =0;
        
        socket.on('arduinoConnected', function (ArduinoData) {
          //console.log(ArduinoData.arduino_serialport_name);
          arduinoPort    = ArduinoData.arduino_serialport_name;
          arduinoVersion = ArduinoData.arduino_boardVersion;
          $("#footer").prepend("Flot " + $.plot.version + " &ndash; Arduino "+arduinoVersion +" on "+ arduinoPort);
        });
        socket.on('news', function (data) {
          an0 = data.an0;
          an1 = data.an1;
          an2 = data.an2;
          an3 = data.an3;
          an4 = data.an4;
          an5 = data.an5;
          an5 = an5 * 5.0 /1024 *3.5;
          $('#div_an0').text(an0 +":A0");
          $('#div_an1').text(an1 +":A1");
          $('#div_an2').text(an2 +":A2");
          $('#div_an3').text(an3 +":A3");
          $('#div_an4').text(an4 +":A4");
          $('#div_an5').text(an5.toFixed(2) +":A5");
          if(d0.length>totalPoints){
            d0 = d0.splice(1,totalPoints);
            d1 = d1.slice(0-totalPoints);
            d2 = d2.slice(0-totalPoints);
            d3 = d3.slice(0-totalPoints);
            d4 = d4.slice(0-totalPoints);
            d5 = d5.slice(0-totalPoints);

          }
          d0.push([i,an0]);  
          d1.push([i,an1]); 
          d2.push([i,an2]); 
          d3.push([i,an3]); 
          d4.push([i,an4]); 

          d5.push([i,an5]); 
          i++;
          update();
          //console.log(d0);
          socket.emit('my other event', { my: 'client do server' });
        });
        var  totalPoints = 300;
        // Set up the control widget
        //var updateInterval = 30;
        var d=[
          { data: d0, label:'A0'},
          { data: d1, label:'A1'},
          { data: d2, label:'A2'}
        ];
        /*
        var plot = $.plot("#placeholder", 
          //[ getRandomData() ]
          d
          , {
          series: {
            lineWidth: 5,
            shadowSize: 3, // Drawing is faster without shadows
              colors: ["#000000","#d18b2c", "#dba255", "#919733"]
          },
          yaxis: {
            min: 0,
            max: 104
          },
          xaxis: {
            show: false,
            mode:'time'
          }
        });*/
        function update() {
          //d0=[[1,1],[2,2],[3,3]];
          var d=[
            { data: d0, label:'A0'},
            { data: d1, label:'A1'},
            { data: d2, label:'A2'},
            { data: d3, label:'A3'},
            { data: d4, label:'A4'},
            { data: d5, label:'A5', yaxis:2, lineWidth: 2}
          ];
          plot = $.plot("#placeholder", 
            d
            , {
            series: {
              lines: {
                lineWidth: 1,
                shadowSize: 0,
                
              },
              shadowSize: 0, // Drawing is faster without shadows
            },
            colors: ["#edc240","#2B65EC", "#cb4b4b", "#4da74d", "#9440ed", "#B2912F"],
            //yaxis: {
            //  min: 0,
            //  max: 1024
            //},
            yaxes: [  { position: "left" , min: 0, max: 1024 }, 
                      { position: "right", min: 0, max: 14 } 
                  ],
            xaxes: {  show: true },
            grid: {
              markings: [
                { color: "#f00", lineWidth: 1, yaxis: { from: 512, to: 512 } }
              ]
            }
          });
            // Since the axes don't change, we don't need to call plot.setupGrid()
          plot.draw();
          //setTimeout(update, updateInterval);
        }
        //update();
        //$("#footer").prepend("Flot " + $.plot.version + " &ndash; "+arduinoVersion + arduinoPort);
      });


  body
    .container
      .row.clearfix
        .col-md-12.column
          nav.navbar.navbar-default(role='navigation')
            .navbar-header
              button.navbar-toggle(type='button', data-toggle='collapse', data-target='#bs-example-navbar-collapse-1')
                span.sr-only Toggle navigation
                span.icon-bar
                span.icon-bar
                span.icon-bar
              |  
              a.navbar-brand(href='#') PHT
            #bs-example-navbar-collapse-1.collapse.navbar-collapse
              ul.nav.navbar-nav
                li.active
                  a(href='#') Link
                li
                  a(href='#') Link
                li.dropdown
                  a.dropdown-toggle(href='#', data-toggle='dropdown')
                    | Dropdown
                    strong.caret
                  ul.dropdown-menu
                    li
                      a(href='#') Action
                    li
                      a(href='#') Another action
                    li
                      a(href='#') Something else here
                    li.divider
                    li
                      a(href='#') Separated link
                    li.divider
                    li
                      a(href='#') One more separated link
              form.navbar-form.navbar-left(role='search')
                .form-group
                  input.form-control(type='text')
                |  
                button.btn.btn-default(type='submit') Submit
              ul.nav.navbar-nav.navbar-right
                li
                  a(href='#') Link
                li.dropdown
                  a.dropdown-toggle(href='#', data-toggle='dropdown')
                    | Dropdown
                    strong.caret
                  ul.dropdown-menu
                    li
                      a(href='#') Action
                    li
                      a(href='#') Another action
                    li
                      a(href='#') Something else here
                    li.divider
                    li
                      a(href='#') Separated link
      .row.clearfix
        .col-md-9.column
          h3
            | Sensores do Arduino
          p
          #placeholder.demo-placeholder(style="width:600px;height:400px")
          #footer
          h2
            | Instruções
          p
            | Conectar os sensores às portas analógicas A0-A5

        .col-md-3.column
          #div_an0.analogLabel.colorA0 A0
          #div_an1.analogLabel.colorA1 A1
          #div_an2.analogLabel.colorA2 A2
          #div_an3.analogLabel.colorA3 A3
          #div_an4.analogLabel.colorA4 A4
          #div_an5.analogLabel.colorA5 A5
          //span.label.label-default Label
          //|  
          //span.label.label-default Label
          form(role='form')
            .checkbox
              label
                input#saveFileCheckbox(type='checkbox')
                |  Save file
            .form-group
              label(for='exampleInputEmail1') Save file
              input#buttonToggle(type='button', value='ON', onclick='toggle(this);')
            .form-group
              label(for='exampleInputEmail1') Email address
              input#exampleInputEmail1.form-control(type='email')
            .form-group
              label(for='exampleInputPassword1') Password
              input#exampleInputPassword1.form-control(type='password')
            .form-group
              label(for='exampleInputFile') File input
              input#exampleInputFile(type='file')
              p.help-block
                | Example block-level help text here.
            .checkbox
              label
                input(type='checkbox')
                |  Check me out
            |  
            button.btn.btn-default(type='submit') Submit

